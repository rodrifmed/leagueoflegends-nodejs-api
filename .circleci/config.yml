version: 2
jobs:
 build:
   branches:
     only:
       - master
   docker:
     - image: circleci:8.12-browsers-legacy
   steps:
     - checkout

     - run:
          name: update-npm
          command: 'npm install -g npm@latest'

     - restore_cache: # special step to restore the dependency cache
          key: dependency-cache-{{ checksum "package.json" }}

     - save_cache: # special step to save the dependency cache
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules 
     # test
     - run: |
         npm install

     # test
     - run: |
         npm test
         
     # build image
     - run: |
         docker info
         docker build --build-arg RIOT_API_KEY=$RIOT_API_KEY --build-arg USE_CACHE=$USE_CACHE --build-arg REDIS_HOST=$REDIS_HOST --build-arg REDIS_PORT=$REDIS_PORT -t leagueoflegends-api .
     # deploy the image
     - run: |
         set -eu -o pipefail
         echo $HEROKU_API_KEY | docker login --username=$HEROKU_USERNAME --password-stdin registry.heroku.com
         docker tag leagueoflegends-api registry.heroku.com/$HEROKU_APP_NAME/web
         docker push registry.heroku.com/$HEROKU_APP_NAME/web
         docker inspect registry.heroku.com/$HEROKU_APP_NAME/web --format={{.Id}} > WEB_DOCKER_IMAGE_ID_FILE
         export WEB_DOCKER_IMAGE_ID=$(cat WEB_DOCKER_IMAGE_ID_FILE)
         curl -n -X PATCH https://api.heroku.com/apps/$HEROKU_APP_NAME/formation \
            -d '{ "updates": [ { "type": "web", "docker_image": "'"$WEB_DOCKER_IMAGE_ID"'" }]}' \
          -H "Content-Type: application/json" \
          -H "Accept: application/vnd.heroku+json; version=3.docker-releases" \
          -H "Authorization: Bearer $HEROKU_API_KEY"